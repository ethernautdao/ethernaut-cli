name: Ethernaut cli CI

on:
  push:
  pull_request:

env:
  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
  ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  OSO_DEVELOPER_API_KEY: ${{ secrets.OSO_DEVELOPER_API_KEY }}

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run lint
  ethernaut-common:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - name: Start local chain
        run: |
          npm run chain &
          sleep 5
      - run: cd packages/ethernaut-common && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-common
          parallel: true
  ethernaut-oso:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - run: cd packages/ethernaut-oso && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-oso
          parallel: true
  ethernaut-optigov:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - run: cd packages/ethernaut-optigov && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-optigov
          parallel: true
  ethernaut-util:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - run: cd packages/ethernaut-util && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-util
          parallel: true
  ethernaut-util-ui:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - run: cd packages/ethernaut-util-ui && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-util-ui
          parallel: true
  ethernaut-ui:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - run: cd packages/ethernaut-ui && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-ui
          parallel: true
  ethernaut-interact:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Start local chain
        run: |
          npm run chain &
          sleep 5
      - run: cd packages/ethernaut-interact && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-interact
          parallel: true
  ethernaut-interact-ui:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Start local chain
        run: |
          npm run chain &
          sleep 5
      - run: cd packages/ethernaut-interact-ui && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-interact-ui
          parallel: true
  ethernaut-challenges:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Start local chain
        run: |
          npm run chain &
          sleep 5
      - run: cd packages/ethernaut-challenges && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-challenges
          parallel: true
  ethernaut-ai:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - run: cd packages/ethernaut-ai && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-ai
          parallel: true
  ethernaut-ai-ui:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - run: cd packages/ethernaut-ai-ui && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-ai-ui
          parallel: true
  ethernaut-network:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - run: cd packages/ethernaut-network && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-network
          parallel: true
  ethernaut-network-ui:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - run: cd packages/ethernaut-network-ui && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-network-ui
          parallel: true
  ethernaut-wallet:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Start local chain
        run: |
          npm run chain &
          sleep 5
      - run: cd packages/ethernaut-wallet && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-wallet
          parallel: true
  ethernaut-wallet-ui:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Start local chain
        run: |
          npm run chain &
          sleep 5
      - run: cd packages/ethernaut-wallet-ui && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-wallet-ui
          parallel: true
  ethernaut-cli:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.12.0']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run compile --if-present
      - run: cd packages/ethernaut-cli && npm t
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ethernaut-cli
          parallel: true
  finish:
    needs:
      - lint
      - ethernaut-common
      - ethernaut-oso
      - ethernaut-optigov
      - ethernaut-util
      - ethernaut-util-ui
      - ethernaut-ui
      - ethernaut-interact
      - ethernaut-interact-ui
      - ethernaut-challenges
      - ethernaut-ai
      - ethernaut-ai-ui
      - ethernaut-network
      - ethernaut-network-ui
      - ethernaut-wallet
      - ethernaut-wallet-ui
      - ethernaut-cli
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
          carryforward: 'lint,ethernaut-common,ethernaut-oso,ethernaut-optigov,ethernaut-util,ethernaut-util-ui,ethernaut-ui,ethernaut-interact,ethernaut-interact-ui,ethernaut-challenges,ethernaut-ai,ethernaut-ai-ui,ethernaut-network,ethernaut-network-ui,ethernaut-wallet,ethernaut-wallet-ui,ethernaut-cli'
